var ua=window.navigator.userAgent.toLowerCase(),isIe=!!ua.match(/msie/),isMobile=!!ua.match(/iphone|ipad|ipod|android|blackberry|iemobile/),isIos=!!ua.match(/iphone|ipad|ipod/),isAnd=!!ua.match(/android/),ieVersion=ua.match(/trident/)?11:ua.match(/msie/)?ua.split(/msie/)[1].split(/\;/)[0]:0;document.addEventListener?document.addEventListener("DOMContentLoaded",function(){document.removeEventListener("DOMContentLoaded",arguments.callee,!1),ready(),common()},!1):document.attachEvent&&document.attachEvent("onreadystatechange",function(){"complete"===document.readyState&&(document.detachEvent("onreadystatechange",arguments.callee),common())}),document.querySelectorAll||(document.querySelectorAll=function(e){var t,n,i;for(t=document.createElement("style"),n=[],i=void 0,document.documentElement.firstChild.appendChild(t),document._qsa=[],t.styleSheet.cssText=e+"{ x-qsa: expression(document._qsa && document._qsa.push(this)) }",window.scrollBy(0,0),t.parentNode.removeChild(t);document._qsa.length;)i=document._qsa.shift(),i.style.removeAttribute("x-qsa"),n.push(i);return document._qsa=null,n}),document.querySelector||(document.querySelector=function(e){var t=document.querySelectorAll(e);return t.length?t[0]:null}),"document"in self&&("classList"in document.createElement("_")?!function(){"use strict";var e=document.createElement("_");if(e.classList.add("c1","c2"),!e.classList.contains("c2")){var t=function(e){var t=DOMTokenList.prototype[e];DOMTokenList.prototype[e]=function(e){var n,i=arguments.length;for(n=0;n<i;n++)e=arguments[n],t.call(this,e)}};t("add"),t("remove")}if(e.classList.toggle("c3",!1),e.classList.contains("c3")){var n=DOMTokenList.prototype.toggle;DOMTokenList.prototype.toggle=function(e,t){return 1 in arguments&&!this.contains(e)==!t?t:n.call(this,e)}}e=null}():!function(e){"use strict";if("Element"in e){var t="classList",n="prototype",i=e.Element[n],s=Object,o=String[n].trim||function(){return this.replace(/^\s+|\s+$/g,"")},a=Array[n].indexOf||function(e){for(var t=0,n=this.length;t<n;t++)if(t in this&&this[t]===e)return t;return-1},r=function(e,t){this.name=e,this.code=DOMException[e],this.message=t},c=function(e,t){if(""===t)throw new r("SYNTAX_ERR","An invalid or illegal string was specified");if(/\s/.test(t))throw new r("INVALID_CHARACTER_ERR","String contains an invalid character");return a.call(e,t)},l=function(e){for(var t=o.call(e.getAttribute("class")||""),n=t?t.split(/\s+/):[],i=0,s=n.length;i<s;i++)this.push(n[i]);this._updateClassName=function(){e.setAttribute("class",this.toString())}},u=l[n]=[],d=function(){return new l(this)};if(r[n]=Error[n],u.item=function(e){return this[e]||null},u.contains=function(e){return e+="",c(this,e)!==-1},u.add=function(){var e,t=arguments,n=0,i=t.length,s=!1;do e=t[n]+"",c(this,e)===-1&&(this.push(e),s=!0);while(++n<i);s&&this._updateClassName()},u.remove=function(){var e,t,n=arguments,i=0,s=n.length,o=!1;do for(e=n[i]+"",t=c(this,e);t!==-1;)this.splice(t,1),o=!0,t=c(this,e);while(++i<s);o&&this._updateClassName()},u.toggle=function(e,t){e+="";var n=this.contains(e),i=n?t!==!0&&"remove":t!==!1&&"add";return i&&this[i](e),t===!0||t===!1?t:!n},u.toString=function(){return this.join(" ")},s.defineProperty){var m={get:d,enumerable:!0,configurable:!0};try{s.defineProperty(i,t,m)}catch(h){h.number===-2146823252&&(m.enumerable=!1,s.defineProperty(i,t,m))}}else s[n].__defineGetter__&&i.__defineGetter__(t,d)}}(self));var supportPageOffset=void 0!==window.pageXOffset,isCSS1Compat="CSS1Compat"===(document.compatMode||""),userBrowser=window.navigator.userAgent,isOlderIE=!!userBrowser.match(/MSIE [4-8]/),isMobile=!!userBrowser.toLowerCase().match(/android | webos | iphone | ipad | ipod | blackberry | windows phone/),w=document.documentElement.clientWidth,h=document.documentElement.clientHeight,x=supportPageOffset?window.pageXOffset:isCSS1Compat?document.documentElement.scrollLeft:document.body.scrollLeft,y=supportPageOffset?window.pageYOffset:isCSS1Compat?document.documentElement.scrollTop:document.body.scrollTop,currentX=x,currentY=y,addEvent=function(e,t,n){var i,s,o,a;for(a=function(e){var t=e||window.event;return t.target||(t.target=t.srcElement),t.preventDefault||(t.preventDefault=function(){t.returnValue=!1,t.defaultPrevented=!0}),n.call(this,t)},t=t.split(" "),s=0,o=t.length;s<o;s++)i=t[s],e.addEventListener?e.addEventListener(i,n,!1):e.attachEvent("on"+i,a)},jj=function(e){return e.match(/\s/g)?document.querySelectorAll(e):e.match(/^\#/)?document.getElementById(e.replace(/^\#/,"")):e.match(/^\./)?document.getElementsByClassName(e.replace(/^\./,"")):document.getElementsByTagName(e)},common=function(){var e=jj("#header .hamburger")[0],t=jj("#slide-navigator .hamburger")[0],n=jj("#slide-navigator"),i=jj("#header ul li"),s=jj("#footer .list-sns a");addEvent(e,"click",function(e){var i=this.classList;i.contains("active")||(this.classList.add("active"),n.classList.add("active"),setTimeout(function(){n.classList.add("visible")},100),t.classList.add("active"),ga("send","event","상단 네비게이션 바","Button Press","햄버거 버튼 클릭(메뉴 열기)"))}),addEvent(t,"click",function(t){var i=this.classList;i.contains("active")&&(this.classList.remove("active"),n.classList.remove("visible"),setTimeout(function(){n.classList.remove("active")},500),e.classList.remove("active"),ga("send","event","상단 네비게이션 바","Button Press","햄버거 버튼 클릭(메뉴 듣기)"))});for(var o=0,a=i.length;o<a;o++)addEvent(i[o],"click",function(){ga("send","event","상단 네비게이션 바","Button Press",this.getElementsByTagName("a")[0].textContent+" 클릭")});for(var r=0,c=s.length;r<c;r++)addEvent(s[r],"click",function(){ga("send","event","하단 바","Button Press",this.getAttribute("href"))})};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
